networks:
  gestionale_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local

services:
  # === TRAEFIK ===
  traefik:
    image: traefik:v3.5.3
    container_name: traefik
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "${TRAEFIK_HTTP_PORT}:80"
      - "${TRAEFIK_HTTPS_PORT}:443"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    volumes:
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - gestionale_network

  # === DATABASE ===
  postgres:
    image: postgres:16.2
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gestionale_network

  # === KEYCLOAK ===
  keycloak:
    image: ${KEYCLOAK_IMAGE}
    container_name: keycloak
    command:
      - start-dev
      - --hostname-strict=false
      - --hostname-url=http://${APP_HOST}/auth
      - --import-realm
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=${KEYCLOAK_DB}
      - KC_DB_URL=jdbc:postgresql://postgres/${POSTGRES_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/import:/opt/keycloak/data/import:ro
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${APP_HOST}`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    networks:
      - gestionale_network

  # === FRONTEND ===
  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - gestionale_network
    expose:
      - "${FRONTEND_PORT}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=${FRONTEND_PORT}"

  # === BFF NODE.JS ===
  bff:
    build: ./authBff
    container_name: authBff
    environment:
      - PORT=${BFF_PORT}
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - REDIS_URL=${REDIS_URL}
      - FRONTEND_ORIGIN=http://${FRONTEND_HOST}
      - COOKIE_SECRET=${BFF_COOKIE_SECRET}
      - NODE_ENV=${BFF_NODE_ENV}
      - JWKS_REFRESH_INTERVAL_MS=${BFF_JWKS_REFRESH_INTERVAL_MS}
      - SESSION_CLEANUP_INTERVAL_MS=${BFF_SESSION_CLEANUP_INTERVAL_MS}
    depends_on:
      - keycloak
    networks:
      - gestionale_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bff.rule=Host(`${APP_HOST}`) && PathPrefix(`${BFF_PATH}`)"
      - "traefik.http.middlewares.prefix-strip.stripprefix.prefixes=${BFF_PATH}"
      - "traefik.http.routers.bff.entrypoints=web"
      - "traefik.http.services.bff.loadbalancer.server.port=${BFF_PORT}"
  
  # === REDIS (per caching nel BFF) ===
  redis:
    container_name: CacheBFF
    image: redis:7.4
    command: redis-server --save "" --appendonly no
    networks:
      - gestionale_network
    expose:
      - "6379"

  # === WHOAMI SERVICE ===
  whoami:
    image: containous/whoami
    container_name: whoami
    networks:
      - gestionale_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${APP_HOST}`) && PathPrefix(`/api/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=secure-api@file"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
