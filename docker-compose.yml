networks:
  gestionale_network:
    driver: bridge

volumes:
  postgres_keycloak_data:
    driver: local
  keycloak_data:
    driver: local
  timesheet_data:
    driver: local

services:
  # === TRAEFIK ===
  traefik:
    image: traefik:v3.5.3
    container_name: traefik
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "${TRAEFIK_HTTP_PORT}:80"
      - "${TRAEFIK_HTTPS_PORT}:443"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    volumes:
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - gestionale_network

  # === DATABASE PRINCIPALE ===
  postgres_keycloak:
    image: postgres:16.2
    container_name: postgres_keycloak
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    networks:
      - gestionale_network

  # === KEYCLOAK ===
  keycloak:
    image: ${KEYCLOAK_IMAGE}
    container_name: keycloak
    command:
      - start-dev
      - --hostname-strict=false
      - --hostname-url=http://${APP_HOST}
      - --import-realm
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=${KEYCLOAK_DB}
      - KC_DB_URL=jdbc:postgresql://postgres_keycloak/${POSTGRES_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/import:/opt/keycloak/data/import:ro
    depends_on:
      - postgres_keycloak
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    networks:
      - gestionale_network

  # === FRONTEND ===
  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - gestionale_network
    expose:
      - "${FRONTEND_PORT}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=${FRONTEND_PORT}"

  # === BFF NODE.JS ===
  auth_middleware:
    build: ./authMiddleware
    container_name: authMiddleware
    environment:
      - PORT=${AUTH_PORT}
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - REDIS_URL=${REDIS_URL_AUTH}
      - FRONTEND_ORIGIN=http://${FRONTEND_HOST}
      - COOKIE_SECRET=${AUTH_COOKIE_SECRET}
      - NODE_ENV=${AUTH_NODE_ENV}
      - JWKS_REFRESH_INTERVAL_MS=${AUTH_JWKS_REFRESH_INTERVAL_MS}
      - SESSION_CLEANUP_INTERVAL_MS=${AUTH_SESSION_CLEANUP_INTERVAL_MS}
    depends_on:
      - keycloak
    networks:
      - gestionale_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bff.rule=Host(`${APP_HOST}`) && PathPrefix(`${AUTH_PATH}`)"
      - "traefik.http.middlewares.prefix-strip.stripprefix.prefixes=${AUTH_PATH}"
      - "traefik.http.routers.bff.entrypoints=web"
      - "traefik.http.services.bff.loadbalancer.server.port=${AUTH_PORT}"

  # === REDIS ===
  CacheAuth:
    container_name: CacheAuth
    image: redis:7.4
    command: redis-server --save "" --appendonly no
    networks:
      - gestionale_network
    expose:
      - "6379"

  # === WHOAMI SERVICE ===
  whoami:
    image: containous/whoami
    container_name: whoami
    networks:
      - gestionale_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${APP_HOST}`) && PathPrefix(``)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=secure-api@file"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

  # === TIMESHEET SERVICE ===
  timesheet_db:
    image: postgres:15
    container_name: timesheet_db
    environment:
      POSTGRES_DB: timesheet
      POSTGRES_USER: timesheet_user
      POSTGRES_PASSWORD: secret
    volumes:
      - timesheet_data:/var/lib/postgresql/data
    networks:
      - gestionale_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timesheet_user -d timesheet"]
      interval: 10s
      timeout: 5s
      retries: 5

  timesheet_app:
    build: ./services/TimesheetService
    container_name: timesheet_app
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://timesheet_db:5432/timesheet
      SPRING_DATASOURCE_USERNAME: timesheet_user
      SPRING_DATASOURCE_PASSWORD: secret
    depends_on:
      timesheet_db:
        condition: service_healthy
    networks:
      - gestionale_network
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.timesheet.rule=Host(`${APP_HOST}`) && PathPrefix(`/timesheet`)"
      - "traefik.http.routers.timesheet.entrypoints=web"
      - "traefik.http.routers.timesheet.middlewares=secure-api@file"
      - "traefik.http.services.timesheet.loadbalancer.server.port=8080"

  # === USERS SERVICE ===
  users_service:
    build: ./users-service
    container_name: users_service
    environment:
      - NODE_ENV=development
      - PORT=3002
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - KEYCLOAK_CLIENT_USERNAME=${KEYCLOAK_CLIENT_USERNAME}
      - KEYCLOAK_CLIENT_PASSWORD=${KEYCLOAK_CLIENT_PASSWORD}
      - REDIS_URL=${REDIS_URL_USERS}
      - USER_SYNC_INTERVAL_MS=600000
    depends_on:
      - keycloak
      - CacheAuth
    networks:
      - gestionale_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`${APP_HOST}`) && PathPrefix(`/users`)"
      - "traefik.http.routers.users.entrypoints=web"
      - "traefik.http.routers.users.middlewares=secure-api@file"
      - "traefik.http.routers.users.middlewares=secure-api@file,users-strip"
      - "traefik.http.middlewares.users-strip.stripprefix.prefixes=/api/users"
      - "traefik.http.services.users.loadbalancer.server.port=3002"

  # === USERS CACHE ===
  users_cache:
    container_name: users_cache
    image: redis:7.4
    command: redis-server --save "" --appendonly no
    networks:
      - gestionale_network
    expose:
      - "6379"